---
- name: Deploy Java Application from S3
  hosts: appservers
  become: yes
  vars:
    s3_bucket: "{{ lookup('env', 'S3_BUCKET_NAME') | default(s3_bucket) }}"
    app_version: "{{ lookup('env', 'LATEST_VERSION') | default(app_version) }}"
    
  tasks:
    - name: Stop Tomcat service
      systemd:
        name: tomcat
        state: stopped

    - name: Remove old application
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /opt/tomcat/webapps/ROOT.war
        - /opt/tomcat/webapps/ROOT

    - name: Download application from S3
      amazon.aws.s3_object:
        bucket: "{{ s3_bucket }}"
        object: "artifacts/login-app-latest.war"
        dest: "/opt/tomcat/webapps/ROOT.war"
        mode: get

    - name: Set ownership of WAR file
      file:
        path: /opt/tomcat/webapps/ROOT.war
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: '0644'

    - name: Start Tomcat service
      systemd:
        name: tomcat
        state: started

    - name: Wait for application to deploy
      wait_for:
        path: /opt/tomcat/webapps/ROOT
        timeout: 120

    - name: Check application status
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:8080"
        method: GET
        status_code: 200
      register: app_check
      retries: 5
      delay: 10

    - name: Display deployment status
      debug:
        msg: "Deployment {{ 'SUCCESS' if app_check.status == 200 else 'FAILED' }} on {{ inventory_hostname }}"
